@font-face {
  font-family: "Poppins Regular";
  src: url(/build/fonts/Poppins-Regular.35d26b78.ttf);
}
@font-face {
  font-family: "Poppins Bold";
  src: url(/build/fonts/Poppins-Bold.cdb29a5d.ttf);
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins Regular";
  color: #3a1153;
}

article {
  margin: 2rem;
}

a {
  text-decoration: none;
  cursor: pointer;
}

h1,
h2,
h3 {
  text-align: center;
  text-transform: uppercase;
  margin-block: 2rem;
}

ul {
  list-style: none;
}

strong {
  font-family: "Poppins Bold";
}

section {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.divider {
  border-top: 3px solid rgb(207, 207, 207);
  margin-inline: 20rem;
}

.border {
  border-top: 3px solid #3a1153;
  width: 160px;
  margin: 1rem auto;
}

header {
  background-color: #f7efef;
  height: 20vh;
  width: 100%;
}
@media screen and (max-width: 1020px) {
  header.height {
    height: 100vh;
  }
}
header .navbar {
  position: absolute;
  padding: 0 2rem 0 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}
@media screen and (max-width: 969px) {
  header .navbar .logo {
    position: absolute;
    top: 50%;
  }
}
@media screen and (max-width: 300px) {
  header .navbar .logo {
    display: none;
  }
}
header .navbar .navigation {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
header .navbar .navigation.menu-hamburger {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  opacity: 1;
  transition: height 0ms 400ms, opacity 200ms 0ms;
}
@media screen and (max-width: 1020px) {
  header .navbar .navigation {
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    width: 100%;
    height: 100vh;
    overflow: hidden;
    /* Hide the element content, while height = 0 */
    height: 0;
    opacity: 0;
    transition: height 0ms 400ms, opacity 400ms 0ms;
  }
}
header .navbar .navigation ul {
  display: flex;
  gap: 2rem;
}
@media screen and (max-width: 1020px) {
  header .navbar .navigation ul {
    flex-direction: column;
    gap: 2rem;
  }
}
@media screen and (max-width: 969px) {
  header .navbar .navigation ul li a {
    opacity: 1;
  }
}
header .navbar .navigation ul li a.color {
  opacity: 0;
}
header .navbar .menu {
  list-style: none;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1.25rem;
}
@media screen and (max-width: 969px) {
  header .navbar .menu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-block: 1rem;
  }
}
header .navbar .menu li {
  display: flex;
  align-items: center;
}
header .navbar .menu li .accueil {
  font-size: 1rem;
}
header .navbar .menu li a.nav-links {
  text-decoration: none;
  text-transform: uppercase;
  display: inline;
  font-weight: 600;
  font-size: 1.2rem;
  color: #3a1153;
}
header .navbar .menu li a.nav-links:hover {
  color: #ff3d54;
  transition: 0.5s ease-in-out, transform 150ms ease;
}
header .navbar .menu li i {
  color: #3a1153;
  font-size: 2.1rem;
}
header .navbar .menu li i:hover {
  color: #ff3d54;
  transition: 0.5s ease-in-out, transform 150ms ease;
}
header .navbar .menu li a.register-link {
  color: #f7efef;
  background-color: #ff3d54;
  padding: 0.5rem;
  border-radius: 3px;
}
@media screen and (max-width: 969px) {
  header .navbar .menu li a.register-link {
    margin: 0;
  }
}
header .navbar .menu li a.register-link:hover {
  background-color: #f7efef;
  color: #ff3d54;
  border: 1px solid #ff3d54;
  transition: 0.5s ease-in-out, transform 150ms ease;
}
header .navbar .menu li a.login-link {
  border: 1px solid #ff3d54;
  background-color: #f7efef;
  padding: 0.5rem;
  color: #ff3d54;
  border-radius: 3px;
}
@media screen and (max-width: 969px) {
  header .navbar .menu li a.login-link {
    margin: 0;
  }
}
header .navbar .menu li a.login-link:hover {
  color: #f7efef;
  background-color: #ff3d54;
  transition: 0.5s ease-in-out, transform 150ms ease;
}
header .navbar .hamburger {
  position: absolute;
  top: 60px;
  right: 5%;
  font-size: 1.75rem;
  display: none;
  cursor: pointer;
}
@media screen and (max-width: 1020px) {
  header .navbar .hamburger {
    display: block;
  }
}

#form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin: auto;
  padding: 2rem;
}
#form form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  border: 1px solid lightgrey;
  box-shadow: 3px 3px 3px 3px lightgrey;
  border-radius: 6px;
  padding: 2rem;
  margin-bottom: 2rem;
}
#form form div #user_submit {
  margin: 2rem auto;
  text-align: center;
}
#form label {
  display: block;
  margin-right: 5px;
  text-transform: uppercase;
}
#form ul li {
  color: #ff3d54;
}
#form input,
#form textarea {
  width: 400px;
  border-radius: 6px;
  border-width: 2px;
  border-color: #3a1153;
  height: 1.75rem;
}
@media screen and (max-width: 533px) {
  #form input input,
#form input textarea,
#form textarea input,
#form textarea textarea {
    width: 200px;
  }
}
#form textarea {
  resize: vertical;
  height: 200px;
}
#form a:hover {
  color: #ff3d54;
}

#login {
  margin-bottom: 2rem;
  color: #3a1153;
  text-transform: uppercase;
}
#login .form-container {
  display: flex;
  flex-direction: column;
  width: 40%;
  margin: auto;
  border: 1px solid lightgrey;
  border-radius: 6px;
  padding: 2rem;
  box-shadow: 3px 3px 3px 3px lightgrey;
}
#login .form-container label {
  margin-bottom: 0.5rem;
}
#login .form-container label:last-child {
  margin-bottom: 2rem;
}
#login .form-container input:not(:last-child) {
  height: 1.75rem;
  border-radius: 6px;
  margin-bottom: 0.5rem;
}
#login .form-container button {
  width: 200px;
  margin: auto;
}

.btn,
button {
  display: inline-block;
  text-transform: uppercase;
  padding: 0.25rem 2rem;
  border: 1px solid #ff3d54;
  background-color: #ff3d54;
  color: white;
  border-radius: 7px;
  margin-block: 2rem;
  cursor: pointer;
}
.btn:hover, .btn:focus,
button:hover,
button:focus {
  transition: 0.5s ease-in-out, transform 150ms ease;
  background-color: white;
  color: #ff3d54;
}

.swiper {
  width: 600px;
  height: 300px;
}

.card {
  margin: auto;
  text-align: center;
  margin-top: 3rem;
  border: 1px solid darkgrey;
  box-shadow: 3px 3px 3px 3px lightgrey;
  line-height: 1.75;
}
.card:hover {
  transition: 0.5s ease-in-out, transform 150ms ease;
}
.card a {
  font-family: "Poppins Regular";
  font-weight: 700;
}
.card a:hover {
  color: #ff3d54;
  cursor: pointer;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
  margin: auto;
  border-radius: 5px;
}
table th {
  background-color: #f7efef;
  border: 1px solid;
  padding: 0.75rem;
  border-collapse: collapse;
}
table td {
  text-align: center;
  border: 1px solid;
  padding: 0.75rem;
  border-collapse: collapse;
}
table td a {
  margin-left: 0;
}
table i {
  padding: 0.75rem;
}
table i:hover {
  color: #ff3d54;
}

footer {
  background-color: #f7efef;
  width: 100%;
  padding: 0 3%;
}
footer .footnav {
  display: flex;
  justify-content: space-evenly;
  margin-top: 3rem;
}
@media screen and (max-width: 596px) {
  footer .footnav {
    flex-direction: column;
  }
}
footer .footnav .g-map {
  display: block;
  width: 50vw;
  border: 0;
  margin-top: 3rem;
  max-width: 800px;
  max-height: 600px;
  border: 2px solid #ff3d54;
  border-radius: 6px;
  box-shadow: 3px 3px 3px 3px lightgrey;
}
@media screen and (max-width: 596px) {
  footer .footnav .g-map {
    height: 350px;
    width: 70%;
    margin: auto;
  }
}
@media screen and (max-width: 450px) {
  footer .footnav .g-map {
    display: none;
  }
}
footer .footnav .info {
  text-align: center;
  margin-bottom: 1rem;
}
footer .footnav .info img {
  margin-top: 2rem;
}
footer .footnav .info h3 {
  margin-top: 0;
  margin-bottom: 1.25rem;
}
footer .footnav .info p {
  line-height: 1.5rem;
}
footer .footnav .info a {
  margin-right: 0.5rem;
  font-size: 1.5rem;
}
footer .footnav .info.r-sociaux {
  margin-bottom: 1.25rem;
}
footer .links {
  display: flex;
  justify-content: center;
  padding-block: 1rem;
}
footer .links ul {
  display: flex;
  align-items: center;
  gap: 1rem;
}
@media screen and (max-width: 610px) {
  footer .links ul {
    flex-direction: column;
  }
}
footer .links ul li:not(:last-child) {
  padding-right: 1rem;
  border-right: 1px solid #3a1153;
}
@media screen and (max-width: 610px) {
  footer .links ul li:not(:last-child) {
    border-right: 0;
  }
}
footer .links p {
  display: block;
  margin-top: 3rem;
  padding-inline: 1rem;
  color: #3a1153;
}
footer .links p::after {
  content: "|";
}
footer .links p:not(:last-child)::after {
  content: "";
}
@media screen and (max-width: 610px) {
  footer .links p {
    margin-top: 0;
    border: 0;
  }
}

.confidentialite {
  text-align: justify;
  margin-block: 2rem;
}

.mentions {
  text-align: justify;
  margin-block: 2rem;
}

.user-infos {
  display: flex;
  justify-content: center;
}
.user-infos h3,
.user-infos a {
  margin-top: 1.75rem;
  margin-left: 1.75rem;
}

#dashboard h2 {
  text-align: center;
}
#dashboard .article .create_article {
  width: 80%;
  border: solid 1px #f7efef;
  padding: 1.25rem;
  border-radius: 6px;
  box-shadow: 3px 3px 3px 3px lightgrey;
  margin: auto;
}
#dashboard .article .create_article form {
  display: flex;
  align-items: center;
  flex-direction: column;
}
#dashboard .article .create_article form input#article_title {
  margin: 0 auto;
}
#dashboard .article .create_article form .cke_inner,
#dashboard .article .create_article form .cke_reset {
  border-radius: 6px;
}
#dashboard .article .create_article form .form-error {
  margin-block: 1rem;
  display: flex;
  align-items: center;
}
#dashboard .article .create_article form .form-error i {
  color: #ff3d54;
  margin-right: 1rem;
}
#dashboard .article .create_article form .form-error ul li {
  color: #ff3d54;
}
#dashboard .article .create_article form label {
  display: block;
  text-align: center;
  margin-block: 0.75rem;
}
#dashboard .article .create_article form div input[type=datetime-local] {
  text-align: center;
}
#dashboard .article .create_article #article_categories {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
#dashboard .article .create_article #article_categories input[type=checkbox] {
  vertical-align: middle;
  position: relative;
  margin-right: 0.5rem;
}
#dashboard .article .create_article #article_categories label {
  display: inline;
  margin-right: 0.5rem;
}
#dashboard .article .create_article #article_imageName {
  margin-left: 6rem;
  display: flex;
  justify-content: center;
}

.categoryForm {
  width: 100%;
  border: solid 1px #f7efef;
  padding: 1.25rem;
  border-radius: 6px;
  box-shadow: 3px 3px 3px 3px lightgrey;
  margin: auto;
  width: 80%;
}
.categoryForm form {
  display: flex;
  align-items: center;
  flex-direction: column;
}
.categoryForm form input#article_title {
  margin: 0 auto;
}
.categoryForm form .cke_inner,
.categoryForm form .cke_reset {
  border-radius: 6px;
}
.categoryForm form label {
  display: block;
  text-align: center;
  margin-block: 0.75rem;
}

#img-prin {
  margin: 0;
}
#img-prin .slider {
  position: relative;
  height: 70vh;
}
@media screen and (max-width: 870px) {
  #img-prin .slider {
    height: 60vh;
  }
}
@media screen and (max-width: 640px) {
  #img-prin .slider {
    height: 50vh;
  }
}
@media screen and (max-width: 530px) {
  #img-prin .slider {
    height: 40vh;
  }
}
@media screen and (max-width: 470px) {
  #img-prin .slider {
    height: 30vh;
  }
}
@media screen and (max-width: 370px) {
  #img-prin .slider {
    height: 20vh;
  }
}
#img-prin .slider img {
  object-fit: cover;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  transition: opacity 0.5s;
}
#img-prin .slider .active {
  opacity: 1;
}
#img-prin .slider .back,
#img-prin .slider .next {
  cursor: pointer;
  position: absolute;
  font-size: 3rem;
  opacity: 0.5;
  top: 50%;
  transform: translateY(-50%);
}
@media screen and (max-width: 700px) {
  #img-prin .slider .back,
#img-prin .slider .next {
    font-size: 2rem;
  }
}
@media screen and (max-width: 350px) {
  #img-prin .slider .back,
#img-prin .slider .next {
    font-size: 1.5rem;
  }
}
#img-prin .slider .back i:hover,
#img-prin .slider .next i:hover {
  opacity: 1;
  color: #ff3d54;
  transition: 0.5s ease-in-out, transform 150ms ease;
}
#img-prin .slider .next {
  right: 1rem;
}
#img-prin .slider .back {
  left: 1rem;
}

#presentation {
  display: flex;
  justify-content: center;
  text-align: center;
  gap: 2rem;
  width: 100%;
  padding-inline: 1rem;
}
@media screen and (max-width: 820px) {
  #presentation {
    flex-direction: column;
    align-items: center;
  }
}
#presentation .card-container {
  box-shadow: 3px 3px 3px 3px lightgrey;
  border-radius: 6px;
  flex-basis: 30%;
}
@media screen and (max-width: 820px) {
  #presentation .card-container {
    width: 60%;
  }
}
@media screen and (max-width: 720px) {
  #presentation .card-container {
    width: 70%;
  }
}
@media screen and (max-width: 520px) {
  #presentation .card-container {
    width: 80%;
  }
}
@media screen and (max-width: 420px) {
  #presentation .card-container {
    width: 100%;
  }
}
#presentation .card-container .card-content {
  padding: 2rem;
}
#presentation .card-container .card-content h3 {
  margin-block: 1rem;
}
#presentation .card-container .card-content img {
  max-width: 100%;
}

#spotlight {
  display: flex;
  justify-content: center;
  gap: 3rem;
  align-items: center;
  width: 100%;
  color: #3a1153;
  margin-bottom: 3rem;
  margin-top: 0;
}
@media screen and (max-width: 670px) {
  #spotlight {
    flex-direction: column;
    gap: 0;
  }
}
#spotlight .exclu {
  display: flex;
  flex-direction: column;
  width: 50%;
  line-height: 2;
  padding: 2rem;
  text-align: justify;
}
@media screen and (max-width: 670px) {
  #spotlight .exclu {
    width: 100%;
  }
}
#spotlight .exclu .new-member {
  display: flex;
  flex-direction: column;
  text-align: justify;
  padding-inline: 1rem;
}
#spotlight .exclu .flexible {
  flex-grow: 1;
}
#spotlight .exclu img {
  max-width: 80%;
  margin: auto;
  object-fit: contain;
  transform: scale(0.8);
}
@media screen and (max-width: 670px) {
  #spotlight .exclu img {
    width: 100%;
  }
}
#spotlight .exclu img:hover {
  cursor: pointer;
  transform: scale(1);
  transition: 0.5s ease-in-out, transform 150ms ease;
  margin-left: 2rem;
  margin-bottom: 2rem;
}
#spotlight .exclu .btn {
  margin: 1rem auto;
}
#spotlight .exclu .event-list li::before {
  content: "";
  position: relative;
  top: 10%;
  left: -2%;
  border-left: 3px solid #ff3d54;
}

#reviews .testimonials {
  background-color: #f7efef;
  padding-block: 2rem;
  text-align: center;
}
#reviews .testimonials .inner {
  max-width: 1200px;
  margin: auto;
  overflow: hidden;
  padding-inline: 2rem;
}
@media screen and (max-width: 345px) {
  #reviews .testimonials .inner {
    padding-inline: 1.25rem;
  }
}
#reviews .testimonials .inner .row {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}
#reviews .testimonials .inner .row .col {
  padding-block: 2rem;
  flex: 33.33%;
  max-width: 33.33%;
  padding: 15px;
}
@media screen and (max-width: 960px) {
  #reviews .testimonials .inner .row .col {
    flex: 100%;
    max-width: 80%;
  }
}
@media screen and (max-width: 600px) {
  #reviews .testimonials .inner .row .col {
    flex: 100%;
    max-width: 100%;
  }
}
#reviews .testimonials .inner .row .col .testimonial {
  background-color: white;
  padding-bottom: 2rem;
  padding-top: 0;
  padding-inline: 0;
  height: 605.62px;
}
@media screen and (max-width: 961px) {
  #reviews .testimonials .inner .row .col .testimonial {
    height: 100%;
    padding-bottom: 3rem;
  }
}
#reviews .testimonials .inner .row .col .testimonial .student-img {
  border-radius: 6px 6px 0 0;
}
#reviews .testimonials .inner .row .col .testimonial .student-img img {
  width: 100%;
  height: 150px;
  object-fit: cover;
}
#reviews .testimonials .inner .row .col .testimonial .name {
  text-transform: uppercase;
  margin-block: 2rem;
}
#reviews .testimonials .inner .row .col .testimonial .stars {
  margin-bottom: 1rem;
}
#reviews .testimonials .inner .row .col .testimonial .stars i {
  color: #ff3d54;
}
#reviews .testimonials .inner .row .col .testimonial .card-content {
  padding-inline: 1rem;
}

.accordion {
  max-width: 60%;
  box-shadow: 3px 3px 3px 3px lightgrey;
  border-radius: 6px;
  overflow: hidden;
  background-color: #f97685;
  margin: auto;
}
.accordion .accordion-input {
  display: none;
}
.accordion .accordion-input:checked ~ .answer {
  display: block;
}
.accordion .accordion-input:checked ~ .accordion-label::after {
  transform: translateY(-50%) rotate(0.5turn);
}
.accordion .accordion-label,
.accordion .answer {
  padding-block: 1.5rem;
  padding-inline: 3.5rem;
}
.accordion .accordion-label {
  display: block;
  cursor: pointer;
  position: relative;
  transition: 0.5s ease-in-out, transform 150ms ease;
  color: white;
}
.accordion .accordion-label:not(:nth-last-of-type()) {
  border-bottom: 1px solid #3a1153;
}
.accordion .accordion-label:hover {
  background-color: #ff3d54;
  color: white;
}
.accordion .accordion-label::after {
  content: "";
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 0.5rem;
  width: 12px;
  height: 6px;
  background-image: url('data:image/svg+xml;utf8,<svg width="100" height="50" xmlns="http://www.w3.org/2000/svg"><polygon points="0,0 100,0 50,50" style="fill:%3a1153;" /></svg>');
  background-size: contain;
  transition: transform 0.4s;
}
.accordion .answer {
  background-color: white;
  line-height: 1.6;
  display: none;
}

.top-arrow {
  position: fixed;
  right: 10px;
  bottom: 10px;
  z-index: 999999;
  font-size: 2.75rem;
  opacity: 0.5;
}
.top-arrow i {
  color: #3a1153;
}
.top-arrow i:hover {
  cursor: pointer;
  color: #ff3d54;
  transition: 0.5s ease-in-out, transform 150ms ease;
}

#about {
  margin-inline: 0;
}
#about .dir-img {
  display: flex;
  gap: 2rem;
}
#about .dir-img img {
  display: inline;
  max-width: 60%;
  margin: auto;
}
#about .dir-content {
  padding-inline: 2rem;
}
#about .dir-content .text {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
}

#teachers {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 1rem;
}
#teachers .card-container {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 20px 0px;
  flex-wrap: wrap;
}
#teachers .card-container .card-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  width: 70%;
  flex: 1 1 21rem;
  margin: 10px 20px;
  margin: 20px 20px;
  border-radius: 6px;
  box-shadow: 3px 3px 3px 3px lightgrey;
}
#teachers .card-container .card-content .card-img {
  width: 100%;
  height: auto;
}
#teachers .card-container .card-content .card-img img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
#teachers .card-container .card-content .card-body {
  display: flex;
  flex-direction: column;
  padding-block: 1.5rem;
}
#teachers .card-container .card-content .card-body p {
  padding: 30px;
  display: flex;
  flex-direction: column;
}
#teachers .card-container .card-content .card-body a i {
  margin: auto;
}
#teachers .card-container .card-content .card-body .btn {
  margin: auto;
}

.flexible {
  flex-grow: 1;
}

.profile {
  padding-inline: 1rem;
}
.profile .container {
  line-height: 2;
  text-align: left;
  margin: 2rem;
}
.profile .container strong {
  color: #ff3d54;
}

.cards {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
}
.cards .card {
  flex: 0 1 30%;
  padding-bottom: 3rem;
  border: 1px solid rgb(218, 218, 218);
  box-shadow: 5px 7px 7px rgb(218, 218, 218);
  position: relative;
}
@media screen and (max-width: 1023px) {
  .cards .card {
    flex: 0 1 40%;
  }
}
@media screen and (max-width: 730px) {
  .cards .card {
    flex: 0 1 80%;
  }
}
@media screen and (max-width: 520px) {
  .cards .card {
    flex: 0 1 100%;
  }
}
.cards .card .card-img {
  width: 100%;
  height: 25vh;
}
.cards .card .card-img img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.cards .card .card-body {
  padding: 1rem;
}
.cards .card .card-body + a {
  color: #3a1153;
}
.cards .card .card-body p {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}
.cards .card .card-body .btn {
  margin: 1rem auto;
}
.cards .card .card-body .flexible {
  flex-grow: 1;
}

.lesson-cards {
  display: flex;
  gap: 1rem;
  justify-content: center;
  align-items: center;
}
.lesson-cards .lesson-card {
  border: 1px solid black;
  padding: 1rem;
  border-radius: 6px;
}
.lesson-cards .lesson-card h2 {
  margin-block: 1.5rem;
  color: #ff3d54;
}
.lesson-cards .lesson-card ul {
  list-style: none;
}

.pages .pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  padding-block: 1rem;
}
.pages .pagination .page-item {
  list-style: none;
}
.pages .pagination .page-item a:hover,
.pages .pagination .page-item i:hover {
  color: #ff3d54;
  transition: 0.5s ease-in-out, transform 150ms ease;
}

.contactForm {
  margin-block: 5rem;
  margin: 2rem;
}

#alacarte {
  display: flex;
  flex-direction: row;
  justify-content: center;
}

#lessons {
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
  margin-inline: 1rem;
}
#lessons h3 {
  margin: 0;
}
#lessons .cardz {
  display: flex;
  flex-direction: column;
  margin-left: 1rem;
  width: 40%;
  margin: 2rem 1rem;
  padding-bottom: 3rem;
  border: 1px solid #f7efef;
  box-shadow: 3px 3px 3px 3px lightgrey;
  position: relative;
  text-align: justify;
}
@media screen and (max-width: 1010px) {
  #lessons .cardz {
    width: 40%;
  }
}
@media screen and (max-width: 670px) {
  #lessons .cardz {
    width: 70%;
  }
}
@media screen and (max-width: 405px) {
  #lessons .cardz {
    width: 90%;
  }
}
#lessons .cardz ul ul {
  margin-left: 1rem;
}
#lessons .cardz .img-container {
  width: 100%;
  height: 25vh;
}
#lessons .cardz .img-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
#lessons .cardz .content {
  padding: 1rem;
  object-fit: cover;
}
#lessons .cardz .content .flexible {
  flex-grow: 1;
}
#lessons .cardz .btn {
  margin: auto;
}

#dashboard .admin-infos {
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid #f7efef;
  border-radius: 6px;
  box-shadow: 3px 3px 3px 3px lightgrey;
  width: 40%;
  padding: 2rem;
  margin: auto;
}
@media screen and (max-width: 950px) {
  #dashboard .admin-infos {
    flex-direction: column;
    padding-block: 2rem;
    padding-inline: 0;
    text-align: center;
    line-height: 1.75;
  }
}
#dashboard .admin-infos .admin-photo {
  margin: auto;
}
#dashboard .admin-infos .admin-photo i {
  font-size: 5rem;
}
@media screen and (max-width: 630px) {
  #dashboard .admin-infos .admin-photo i {
    font-size: 4rem;
  }
}
#dashboard .admin-infos .admin-body {
  padding: 2rem;
}
#dashboard .admin-infos .admin-body p {
  font-weight: bolder;
}
@media screen and (max-width: 573px) {
  #dashboard .admin-infos .admin-body .admin-email {
    display: none;
  }
}
#dashboard .links {
  display: flex;
  justify-content: center;
  gap: 2rem;
}
@media screen and (max-width: 671px) {
  #dashboard .links .btn {
    font-size: 0.5rem;
  }
}
#dashboard .article-table {
  overflow-x: auto;
}
@media screen and (max-width: 693px) {
  #dashboard .article-table {
    font-size: 0.5rem;
  }
}
@media screen and (max-width: 463px) {
  #dashboard .article-table {
    font-size: 0.4rem;
  }
}
@media screen and (max-width: 463px) {
  #dashboard .article-table {
    font-size: 0.3rem;
  }
}
#dashboard .article-table .tooltip {
  position: relative;
  /* making the .tooltip span a container for the tooltip text */
}
#dashboard .article-table .tooltip::before {
  content: attr(data-text);
  /* here's the magic */
  position: absolute;
  /* vertically center */
  top: 50%;
  transform: translateY(100%);
  /* move to right */
  right: 100%;
  margin-left: 15px;
  /* and add a small left margin */
  /* basic styles */
  width: 200px;
  padding: 10px;
  border-radius: 10px;
  background: rgba(0, 0, 0, 0.441);
  color: #fff;
  text-align: center;
  display: none;
}
#dashboard .article-table .tooltip:hover::before {
  display: block;
}

#super-admin {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2rem;
}
@media screen and (max-width: 930px) {
  #super-admin {
    flex-direction: column;
  }
}
#super-admin .teacher-form button#user_submit {
  margin-bottom: 0;
}
#super-admin .teachers {
  line-height: 2;
}

.article-container {
  padding-inline: 3rem;
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.article-container img {
  width: 60%;
  margin: auto;
  justify-self: center;
}
.article-container .description,
.article-container .contenu {
  text-align: justify;
}
.article-container h2 {
  text-shadow: 2px 2px 2px #f7efef;
}
.article-container h3,
.article-container p {
  margin-block: 1rem;
}
.article-container ol {
  margin-left: 3rem;
}

.leave-comment {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-top: 2rem;
  padding-top: 2rem;
  border: 1px solid #3a1153;
  border-radius: 4px;
  width: 80%;
  margin: auto;
}
.leave-comment label {
  display: block;
  text-align: center;
  text-transform: uppercase;
  margin-block: 1rem;
}
.leave-comment textarea {
  width: 400px;
  border-radius: 6px;
  border-width: 2px;
  border-color: #3a1153;
  height: 1.75rem;
  resize: vertical;
  height: 200px;
}
.leave-comment div {
  text-align: center;
}

.comments {
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding-inline: 3rem;
  padding-top: 3rem;
}
.comments .comment {
  margin-block: 1rem;
}
.comments .divider {
  border-top: 3px solid #f7efef;
  margin-block: 1rem;
  list-style: none;
}

.articleForm {
  border: solid 1px #f7efef;
  padding: 1.25rem;
  border-radius: 6px;
  box-shadow: 3px 3px 3px 3px lightgrey;
  margin: 2rem auto;
  width: 80%;
}
.articleForm form {
  display: flex;
  align-items: center;
  flex-direction: column;
}
.articleForm form label {
  display: block;
  text-align: center;
  margin-block: 0.75rem;
}
.articleForm form #article_imageFile {
  display: flex;
}
.articleForm form #article_imageFile input#file-upload-button {
  display: block;
  margin: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/